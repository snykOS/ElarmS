
EventIDFile	/app/epic/run/params/epic_event.id
TTFile          /app/epic/run/params/h2p+ak135.080

ResetEventID	false	# if true, initialize eventid to 1 when program is restarted

UnassocTriggerTimeout	400	# Unassociated triggers are discarded this many seconds after trigger time
EventTimeout		600	# Events are discarded this many seconds after event time

Verbose			2
MultiStaMinTrigs	3  	# Required number of triggers to create an event in E2Associator::multiStationEvent()
MultiStaMaxDist		200.0	# The maximum allowed event-to-station distance(km) for event creation with MultiStaMinTrigs
PVelocity		 6.0	# P-wave velocity(km/sec) used in E2Associator
StaTTAllowance		 3.0	# The difference between trigger times must be < distance/PVelocity + StaTTAllowance(sec)
MinTP			-0.9	# Triggers are rejected if log(Taup) < MinTP || log(Taup) > MaxTP
MaxTP			 1.0
MinPD			-5.5	# Triggers are rejected if log(Pd) < MinPD || log(Pd) > MaxPD
MaxPD			 3.5
MinPV			-5.5	# Triggers are rejected if log(Pv) < MinPV || log(Pv) > MaxPV
MaxPV			 3.0
MinPA			 -2.5	# Triggers are rejected if log(Pa) < MinPA - Default: -10
ZeroCrossVelAlways	true    # If true, count using velocity even when the channel is acceleration. If false, count vel or accel
ZeroCrossMin		0 	# Triggers are rejected if the number of zero-crossings if less than ZeroCrossMin
MaxNEtoZ		0.95	# Triggers are rejected if the ratio of N or E to Z velocity is greater than MaxNEtoZ
RangeAccelAlways        true    # If true, always use the acceleration vector for the MinRangePostTrig, otherwise use vel or accel
MinRangePostTrigVel	0.0000022 	# Triggers are rejected if the maximum change in the length of the velocity vector in the
				# time period from StartRangePostTrig to EndRangePostTrig seconds after the trigger is 
				# less than MinRangePostTrigVel
MinRangePostTrigAccel	0.0022 	# Triggers are rejected if the maximum change in the length of the acceleration vector in the
				# time period from StartRangePostTrig to EndRangePostTrig seconds after the trigger is 
				# less than MinRangePostTrigAccel

UseSingleStation	false	# Allow single-station event creation and possibly an alert
SingleStaMinTP		0.45	# A single-station event requirement: log(Taup) >= SingleStaMinTP
SingleStaMinPD		1.25    # A single-station event requirement: log(Pd) >= SingleStaMinPD
UseTwoStations		false	# Allow two-station event creation and possibly an alert
TwoStaMinTP		0.3	# A two-station event requirement: log(Taup) >= TwoStaMinTP
TwoStaMinPD		0.5	# A two-station event requirement: log(Pd) >= TwoStaMinPD

MaxTwoStaDist		 30.0	# A two-station event requirement: trigger separation <= MaxTwoStaDist(km) and <= MaxTwoStaDist/Pvelocity
MaxAssocToEventDist	2500.0	# Trigger association to existing event requirement: station distance < MaxAssocToEventDist(km)
TrigStaPercent		  0.4	# Percentage of stations triggering requirement for event creation and trigger association

BlackoutTime		15.0	# An event cannot be created within BlackoutTime(sec) and BlackoutDist(km) of an existing event
BlackoutDist		90.0

# Triggers are associated with an existing event when:
#      event-to-trigger distance < NearSrcKm && trigger_time-event >= NearTTMinDif && trigger_time-event <= NearTTMaxDif
NearSrcKm		20.0
NearTTMinDif		-2.0
NearTTMaxDif		4.0

# Triggers are also associated with an existing event when:
# trigger_time-event >= tmin && trigger_time-event <= tmax, where
# tmin = (distance < 700km) ? PSlow*distance - POffset : (PSlow*700km - POffset) + (0.8*PSlow)*(distance-700)
# tmax = SSlow*distance + SOffset
PSlow			0.125
POffset			10.0
SSlow			0.26
SOffset			0.0

# Stations are considered active in the percent-station-triggered count if the most
# recent gmpeak packet time for that station is > event_time + travel_time - MaxStationDelay(secs)
MaxStationDelay		20.0
MaxStaRelocate		10	# Relocate for each new station associated up to MaxStaRelocate
UseGMPeak		true	# Use GMPeak packets to determine if stations are active in the station count. See MaxStationDelay

MaxMisfit		1.0	# Event creation criterion: event average travel time error must be <= MaxMisfit
# Trigger association to existing event criterion: event average travel time error <= MaxMisfit if nsta <= 4, otherwise <= MaxAssocMisfit
MaxAssocMisfit		10.0
MaxAssocRMSFactor	5.0

# The location grid is a square with (2*GridSize + 1) grid-points on each side
# The grid point separation is (GridKm / GridSize)
# The SearchSize is <= GridSize and defines sub-grid (2*SearchSize+1 square) centered on the larger grid
# The initial grid search over the SearchSize grid uses the approximation that all stations are located on grid points
# The second grid search over the SmallGridSize (2*SmallGridSize+1 square), centered at the min of the first search, uses the true station locations
GridSize		200
GridKm			400.
SearchSize		200
SmallGridSize		3
LocationPVelocity	6.0	# This P velocity is used for the two-station location and for distances > maximum input distance/travel times

MinTaupSNR		0.5	# Minimum TauP SNR needed to include TauP magnitude, when useTaupMag is true
MinPdSNR		0.5	# Minimum Pd SNR needed to include Pd magnitude from PdSNRregex channels
MinPvSNR		0.5	# Minimum Pv SNR needed to include Pd magnitude from PvSNRregex channels
PdSNRregex		CI:.*|AZ:.*|.*:.H. # network:channel regex pattern for channels that use MinPdSNR as an include magnitude criterion
PvSNRregex		.*:.L.|.*:.N.      # network:channel regex pattern for channels that use MinPvSNR as an include magnitude criterion
PdmagCoefficients	5.39, 1.23, 1.38 # default coefficients for pdmag = 5.39 + 1.23*log10(fabs(trigger_Pd)) + 1.38*log10(trigger_distancekm)
TpmagCoefficients	5.2215, 6.6589   # default coefficients for tpmag = 5.2215 + 6.6589*log10(fabs(trigger_Taup))
UseTaupMag		false	# If true, event-magnitude = (Taup magnitude + Pd magnitude)/2. If false, event magnitude = Pd magnitude
MaxMagDistkm		200.	# Use only magnitudes from stations within MaxMagDistkm of the event.
# Define an area with a polygon (lat,lon clockwise) that has its own MaxMagDistkm. First value is the MaxMagDistkm used for events inside the polygon.
MaxMagDistRegion1	300, 41.0, -126.0, 41.0, -124.4, 39.8, -124.4, 39.8, -126.0, 41.0, -126.0
# Define a polygon region for different PdMagCoefficients for stations inside the polygon: three coefficients followed by the polygon
# pdMagRegion1		coefficient1, coefficient2, coefficient3, lat,lon,...
# Define a polygon region for different TpMagCoefficients for stations inside the polygon: two coefficients followed by the polygon
# tpMagRegion1		coefficient1, coefficient2, lat,lon,...

DataSource		ACTIVEMQ
#DataSource		FILE 
#DataSource		WPFILE 

SendMessage		true	# Send an alert message. If not true, alerts are only logged.
SendCancelMessage	false	# Send a cancel message if the alert criteria are not passed after an alert has already been issued
SendEmail		false	# Send an email to address Emailto for each first-alert
Mailx			/bin/mailx
E2Email			/app/epic/run/bin/E2Email # script that creates an email with a google map image
Emailto						# email address
TmpDir			/app/epic/run/tmp	# used to create the email message

TestTeleseism		true	# If true, do not alert if the event passes the Pd/Taup test for a teleseism
# The teleseismic filter is a line in the log10(Pd_trigger_average), log10(Taup_trigger_average) plot.
# log10(PdAverage) = tele_filter_intercept + tele_filter_slope * log10(TaupAverage)
# If the event is below this line, then it is classified as a teleseism, and will not be alerted if TestTeleseism is true.
TeleFilterIntercept	-3.728
TeleFilterSlope		2.817


# Parameters for teleseism filter based on multiple filter bands and window lengths
UseTF			true
TFFile			/app/epic/run/params/tfparam.dat
TFMaxStaDist		200.	# max allowed station distance for classifying station triggers as teleseismic
# Window lengths are 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0, 2.0 seconds
# TFMinWindowIndex starts at 0, so index 1 is 0.2sec. Require at least this much data for the filter band amplitude calculations
TFMinWindowIndex	2	# wait for a measurement at this window length from at least TFNumStaRequired stations
TFLow			6	# the high frequency filter-band index (0 to NUM_FBANDS-1) (filter bands are ordered high to low)
TFHigh			2	# the low frequency filter-band index (0 to NUM_FBANDS-1)
TFM2			1.25	# the trigger is teleseismic only if Pgv[TFLow] > TFM2 * Pgv[TFHigh] + TFB2
TFB2			1.40
TFChannelReverse	false	# true: allow a trigger to change from teleseismic to non-teleseismic
				# false: do not allow a trigger to change from teleseismic to non-teleseismic
TFEventReverse		false	# true: allow an event to change from teleseismic to non-teleseismic
				# false: do not allow an event to change from teleseismic to non-teleseismic
TFDisagreeSta		1	# 0: if two channels at a station disagree, count the station as non-teleseismic
				# 1: if two channels at a station disagree, count the station as teleseismic
TFNumStaRequired	2	# the number of agreeing stations required to declare the state of the event


# Parameters for processing PDL teleseismic event messages (from topic eew.alg.epic.teleseism.data)
# The message contains a time window during which teleseismic phases will arrive at stations in the network (as specified by the polygon
# region parameter to the EEWTeleseism program)
# If a trigger time is within the time window +/- TeleseismicSecs, the trigger teleseismlevel is set to 1
# If a trigger time is within the predicted teleseismic arrival time at the station, +/- TeleseismicSecs, the trigger teleseismlevel is set to 2
# Triggers with trigger_teleseismlevel >= TeleseismLevel will not be associated with local events.
TeleseismLevel		1
TeleseismicSecs		60.0
MinMagChangeAlert	0.1	# Only send update alerts for magnitude changes >= MinMagChangeAlert
AlertMinMag		2.0	# Only send alerts when the magnitude is >= AlertMinMag and <= AlertMaxMag
AlertMaxMag		10.0
AlertMinTrigs		3	# Only send alerts when the number of triggers is >= AlertMinTrigs and the number of station is >= AlertMinStats
AlertMinStats		4
AlertMinAzSpan		0.0	# Only send alerts when the station azimuths span >= AlertMinAzSpan
AlertDuration		40.	# Discontinue alerts after AlertDuration seconds
# Define an area with a polygon (lat,lon clockwise) that has its own AlertMinStats. First value is the AlertMinStats required for events inside the polygon.
AlertMinStaRegion1	5, 32.0, -126.0, 32.0, -110.0, 30.0, -110.0, 30.0, -126.0, 32.0, -126.0

# Optionally send the log file output to the Activemq at LogURI as topic LogTopic.
# Send station latency summaries to StationHBTopic every StationHBInterval secs.
SendLogKey		false
LogURI			failover:(tcp://localhost:62616)?randomize=false
LogTopic		eew.alg.epic.log
StationHBInterval	600
StationHBTopic		eew.alg.epic.station.data
LogPercentMin		20.0 # the minimum event.percnt value for logging event build and station count information

# Activemq user name and password for both incoming and outgoing servers
AmqUser		epic
AmqPassword	

# Address of the activemq trigger server
TriggerURI	failover:(tcp://localhost:62616)?randomize=false
TriggerTopic	eew.alg.epic.*.data

# Address of the activemq DM server
EventURI	failover:(tcp://localhost:62616)?randomize=false
EventTopic	eew.alg.epic.data
HeartbeatTopic	eew.alg.epic.hb
HeartbeatSender epic.eew-bk-dev1

# A cluster of stations is "counted" as one station in the percent triggered criteria
# The first two numbers specify the center (lat,lon) of the cluster
# The third number is the cluster-radius. All stations within this distance of the center are members of the cluster.
# The fourth number is the event-radius. If an event is located outside of this radius, the stations 
# are treated as a cluster. If an event is inside this radius, all station are counted individually.
# Optional: Any stations appended will be included in the cluster regardless of their location.
Cluster1  37.6368, -119.0179, 20.0, 30.0
Cluster2  37.8775, -122.2489, 1.0, 5.0, BK.BL67, BK.BL88, BK.BKS, BK.BRK, BK.VAK
Cluster3  45.5, -122.7, 20.0, 40.0
Cluster4  43.7238, -121.286, 5, 5
Cluster5  46.2,-122.19, 2, 10
Cluster6  46.52,-119.47,15, 50
Cluster7  47.589, -122.283, 12, 15
